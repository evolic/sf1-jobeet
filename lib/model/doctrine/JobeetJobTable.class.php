<?php

/**
 * JobeetJobTable
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class JobeetJobTable extends Doctrine_Table
{
    static public $types = array(
        'full-time' => 'Full time',
        'part-time' => 'Part time',
        'freelance' => 'Freelance',
    );


    /**
     * Returns an instance of this class.
     *
     * @return object JobeetJobTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('JobeetJob');
    }

    public function getTypes()
    {
        return self::$types;
    }

    public function retrieveActiveJob(Doctrine_Query $query)
    {
        return $this->addActiveJobsQuery($query)->fetchOne();
    }

    public function getActiveJobs(Doctrine_Query $query = null)
    {
        return $this->addActiveJobsQuery($query)->execute();
    }

    public function countActiveJobs(Doctrine_Query $query = null)
    {
        return $this->addActiveJobsQuery($query)->count();
    }

    public function addActiveJobsQuery(Doctrine_Query $query = null)
    {
        if (is_null($query))
        {
            $query = Doctrine_Query::create()
                ->from('JobeetJob j');
        }

        $alias = $query->getRootAlias();

        $date = date('Y-m-d H:i:s', time());
        $query->andWhere($alias . '.expires_at > ?', $date)
            ->addOrderBy($alias . '.created_at DESC');

        $query->andWhere($alias . '.is_activated = ?', 1);

        return $query;
    }

    public function extendJobs(array $ids)
    {
        $query = Doctrine_Query::create()
            ->from('JobeetJob j')
            ->whereIn('j.id', $ids);

        $conn = sfContext::getInstance()->getDatabaseManager()->getDatabase('doctrine')->getDoctrineConnection();

        try {
            $conn->beginTransaction();

            $jobs = $query->execute();

            foreach ($jobs as $job) {
                $job->extend(true);
            }

            // Commit the transaction when done
            $conn->commit();

            return true;
        } catch (Doctrine_Exception $e) {
            // Rollback if transaction fail
            $conn->rollback();
        }

        return false;
    }

    public function cleanup($days)
    {
        $date = date('Y-m-d', time() - 86400 * $days);
        $query = $this->createQuery('a')
            ->delete()
            ->andWhere('a.is_activated = ?', 0)
            ->andWhere('a.created_at < ?', $date);

        return $query->execute();
    }

    public function retrieveBackendJobList(Doctrine_Query $query)
    {
        $rootAlias = $query->getRootAlias();

        $query->leftJoin($rootAlias . '.JobeetCategory c');

        return $query;
    }
}